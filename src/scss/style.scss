@import url(null.css);
@import url(fonts.css);

//Adaptive Value

@mixin adaptiveValue($property, $startSize, $minSize, $widthFrom: $containerWidth, $widthTo: 320) {
    #{$property}: #{$startSize + px};
    $addSize: $startSize - $minSize;
    @media screen and (max-width: #{$containerWidth + px}) {
        #{$property}: calc(
            #{$minSize + px} + #{$addSize} * ((100vw - #{$widthTo + px}) / (#{$containerWidth} - #{$widthTo}))
        );
    }
}

//Colors

$black: #1d1700;
$blue: #0278e5;
$cremWhite: #faf8f7;

//Widths
$containerWidth: 1834;
$minWidth: 320;
$tabletWidth: 768;
$mobileWidth: 576;

//Main styles

body {
    font-family: "Stem", sans-serif;
    font-weight: 300;
    color: $black;
}

.container {
    max-width: $containerWidth + px;
    padding: 10px;
    margin: 0 auto;
}

//Header

.header {
    // .header__container
    @include adaptiveValue("padding-top", 58, 10, $containerWidth);
    @include adaptiveValue("padding-bottom", 40, 10, $containerWidth);
    position: relative;
    &__container {
        display: flex;
        align-items: center;
    }

    // .header__logo

    &__logo {
        @include adaptiveValue("margin-right", 101, 35, $containerWidth, $tabletWidth);
        height: 42px;
        & img {
            max-width: 100%;
            height: 100%;
            object-fit: contain;
        }
    }

    // .header__nav

    &__nav {
        @include adaptiveValue("margin-right", 54, 10, $containerWidth, $tabletWidth);
        & ul {
            display: flex;
            flex-wrap: wrap;
            row-gap: 10px;
        }
        &-item {
            text-transform: uppercase;
            position: relative;
            font-size: 1.25rem;
            font-weight: 500;
            &:not(:last-child) {
                @include adaptiveValue("margin-right", 51, 26, $containerWidth, $tabletWidth);
                @media screen and (max-width: #{$tabletWidth + px}) {
                    margin-right: 0;
                    @include adaptiveValue("margin-bottom", 50, 6, $tabletWidth, $minWidth);
                }
            }
            // Without bg-image
            // &::before {
            //     content: "";
            //     position: absolute;
            //     top: 0;
            //     left: -12px;
            //     width: 5px;
            //     height: 100%;
            //     transform: rotate(30deg);
            //     background-color: $blue;
            // }
            //With bg-image
            &::before {
                content: "";
                position: absolute;
                top: 50%;
                transform: translateY(-50%) translateX(-150%);
                left: 0;
                width: 13px;
                height: 100%;
                background-image: url(../../assets/icons/header-nav.svg);
                background-position: center;
                background-repeat: no-repeat;
                background-size: contain;
            }
            &_active {
                color: $blue;
            }
            @media screen and (max-width: #{$tabletWidth + px}) {
                color: white;
                font-size: 1.475rem;
            }
        }
        @media screen and (max-width: #{$tabletWidth + px}) {
            display: none;
        }
    }

    // .header__options

    &__options {
        display: flex;
        flex-wrap: wrap;
        row-gap: 35px;
        @media screen and (max-width: #{$tabletWidth + px}) {
            display: none;
        }
    }

    &__icon {
        margin-right: 0;
        margin-left: auto;
        width: 30px;
        height: 20px;
        position: relative;
        z-index: 3;
        @media screen and (min-width: calc(#{$tabletWidth + px} + 1px )) {
            display: none;
        }
    }

    &__mobile {
        position: fixed;
        top: 0;
        left: 0;
        transform: translateX(-100%);
        transition: 0.5s;
        display: flex;
        flex-direction: column;
        align-items: center;
        justify-content: center;
        width: 100%;
        height: 100vh;
        background-color: rgba(0, 0, 0, 0.8);
        &._active {
            transform: translateX(0);
        }
        @media screen and (min-width: calc(#{$tabletWidth + px} + 1px )) {
            display: none;
        }
    }
}

.mobile-header {
    overflow: scroll;
    &__nav {
        display: flex;
        margin-top: 50px;
        margin-bottom: 80px;
        padding: 15px;
        & ul {
            display: flex;
            flex-direction: column;
            align-items: center;
            text-align: center;
            white-space: nowrap;
        }
    }
    &__options {
        padding: 5px;
        display: flex;
        flex-wrap: wrap;
        row-gap: 35px;
        justify-content: center;
        justify-self: flex-end;
    }
}

.options-header {
    // .options-header__item
    &__item {
        display: inline-block;
        &:not(:last-child) {
            @include adaptiveValue("margin-right", 18, 8, $containerWidth, $tabletWidth);
        }

        & a {
            background-color: $cremWhite;
            padding: 12px;
            border-radius: 50%;
            box-shadow: 0px 3px 6px rgba(29, 23, 0, 0.1);
        }

        // .options-header__item_btn
        &_btn {
            & a {
                border-radius: 39px;
                padding: 12px 28px;
            }
        }

        &::after {
            position: absolute;
            background-color: white;
            font-size: 0.875rem;
            width: 21px;
            line-height: 19px;
            top: -100%;
            right: -10%;
            text-align: center;
            border-radius: 50%;
            border: 1px solid $black;
        }

        // .options-header__item_diagram
        &_diagram {
            position: relative;
            &::after {
                content: "2";
            }
        }

        // .options-header__item_cart
        &_cart {
            position: relative;
            &::after {
                content: "4";
            }
        }
    }
}

.menu-icon {
    padding: 10px;
    &:hover {
        cursor: pointer;
    }
    & span,
    &::before,
    &::after {
        position: absolute;
        left: 0;
        width: 100%;
        height: 15%;
        background-color: $blue;
        transition: all 0.5s ease 0s;
    }
    &::before,
    &::after {
        content: "";
    }
    & span {
        top: 50%;
        transform: scale(1) translateY(-50%);
    }
    &::before {
        top: 0;
    }
    &::after {
        bottom: 0;
    }

    &._active span {
        top: 50%;
        transform: scale(0) translateY(-50%);
        background-color: #fff;
    }
    &._active::before {
        top: 50%;
        transform: rotate(-45deg) translateY(-50%);
        background-color: #fff;
    }
    &._active::after {
        bottom: 50%;
        transform: rotate(45deg) translateY(50%);
        background-color: #fff; 
    }
}
